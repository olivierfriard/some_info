#!/usr/bin/Rscript


# run Acoustic Complexity Index (ACI) from the Soundecology package


library("optparse")
library("seewave")
library("tuneR")

option_list = list(

    make_option(c("-d", "--directory"), type="character", default=NULL, 
                help="Sounds directory path", metavar="character"),

    make_option(c("-o", "--output"), type="character", default="aci_out.tsv", 
                help="Output file name [default= %default]", metavar="character"),

    make_option(c("--min_freq"), type="integer", default=NULL, 
                help="miminum frequency to use when calculating the value (in KHz) (default: NULL)",
                metavar="number"),

    make_option(c("--max_freq"), type="integer", default=NULL, 
                help="maximum frequency to use when calculating the value (in KHz) (default: NULL)",
                metavar="number"),

    make_option(c("-w", "--wl"), type="integer", default=512, 
                help="Window length [default= %default]",
                metavar="number"),

    make_option(c("--channel"), type="integer", default=1, 
                help="channel left: 1 right: 2 [default= %default]", metavar="number"),

    make_option(c("--ovlp"), type="integer", default=0, 
                help="overlap between two successive windows (in %) [default= %default]", metavar="number")

); 
 
opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);

if (is.null(opt$directory)){
  print_help(opt_parser)
  stop("You must supply a directory", call.=FALSE)
}

if (is.null(opt$min_freq) & is.null(opt$max_freq)) {
    min_max = NULL
} else {
min_max = c(opt$min_freq, opt$max_freq)

}

# header
sink(opt$output, append=TRUE)
cat(paste("file name", "channel", "window length", "overlap between window", "min freq, max freq", "ACI", sep=";"))
cat("\n")
sink()

file.names <- dir(opt$directory, pattern =".wav")
for(i in 1:length(file.names)){
    sound = readWave(paste(opt$directory, file.names[i], sep="/"))
    r = ACI(sound,
            channel=opt$channel,
            wl=opt$wl,
            ovlp=opt$ovlp,
            wn="hanning",
            flim=min_max,
            nbwindows=1
            )

    sink(opt$output, append=TRUE)
    cat(paste(file.names[i], opt$channel, opt$wl, opt$ovlp, opt$min_freq, opt$max_freq, r, sep=";"))
    cat("\n")
    sink()

}


