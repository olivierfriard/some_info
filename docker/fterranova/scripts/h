#!/usr/bin/Rscript


# run Total entropy (from seewave package)

# read sounds directory as argument
# example: h -d /home/sounds -o ndsi.tsv -c 2

library("optparse")
library("seewave")
library("tuneR")


option_list = list(

    make_option(c("-d", "--directory"), type="character", default=NULL, 
                help="sounds directory path", metavar="character"),

    make_option(c("-o", "--output"), type="character", default="h_out.tsv", 
                help="output file name [default= %default]", metavar="character"),

    make_option(c("--channel"), type="integer", default=1, 
                help="channel left: 1 right: 2 [default= %default]", metavar="number"),


    make_option(c("-e", "--envt"), type="character", default="hil", 
                help=" Type of envelope (default: hil)", metavar="character"),

    make_option(c("-w", "--wl"), type="integer", default=512, 
                help="window length for spectral entropy analysis [default= %default]",
                metavar="number")

); 
 
opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);

if (is.null(opt$directory)){
  print_help(opt_parser)
  stop("You must supply a directory", call.=FALSE)
}


file.names <- Sys.glob(paste(opt$directory, '*.wav', sep="/"))


for(i in 1:length(file.names)){

    sound = readWave(file.names[i])

    # duration
    duration = 0
    if (length(sound@left))
        {
        duration = length(sound@left) / sound@samp.rate
        } else if (length(sound@right)) {
       duration = length(sound@right) / sound@samp.rate
    }

    # channels
    if (sound@stereo)
        {channels = 2
       }  else {
         channels = 1
}

    r = tryCatch(
            {H(sound, wl = opt$wl, envt=opt$envt)},
            error = function(e) 
                        {
                        return(NA)
                        }
                )

    sink(opt$output, append=TRUE)
    cat(paste(basename(file.names[i]), 
              sound@samp.rate,
              sound@bit,
              duration,
              channels,
              'total entropy',
              r, sep=","))
    cat("\n")
    sink()
}


